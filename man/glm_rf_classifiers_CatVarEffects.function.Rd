% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2_gdaphen_analysis.R
\name{glm_rf_classifiers_CatVarEffects.function}
\alias{glm_rf_classifiers_CatVarEffects.function}
\title{Function for classification}
\usage{
glm_rf_classifiers_CatVarEffects.function(
  data,
  nameData,
  angle1,
  angle2,
  catVaMFA,
  catVarName,
  glmNet_grid,
  nameModel
)
}
\arguments{
\item{data}{input data can be
For the full model, "phenoSocial_4analysis"
For the sel30 model, "parameters_more_30perc_informative_{nameVariable}"
For the sel1 model, "phenoAll_4analysis_woHighCor_sel1"}

\item{nameData}{name to assignate eEx:
For the full model, paste0(name,"_fullMdl")
For the sel30 model, paste0(name,"_sel30perc")
For the sel1 model, paste0(name,"_sel1Mdl")}

\item{angle1}{Default 90.The angles parameters represent the angles to
write the variable names labels inside the plots,adjust if needed,
angle1 is for the glm plot}

\item{angle2}{Default 90.The angles parameters represent the angles to
write the variable names labels inside the plots, angle2 is for the RF plot.}

\item{catVaMFA}{name of the independent variable used to run the mfa.function}

\item{catVarName}{name of the categorical variable you want to test the contribution here.}

\item{glmNet_grid}{keep it to normal, change to tuned when an error arise saying too many NAs were computed}

\item{nameModel}{Short naming for the model you are using.
Ex: "fullMdl" for the model including all variables;"Sel1" for the model not including the
highly correlated variables, "Sel30" for the model including only the variables contributing
more thana 30\%}
}
\value{
calculation of cllassifiers.
}
\description{
Function for classification
}
\examples{
```
# Sel30 model (model most discriminative variables, 
contributing more than 30\% in PCA)
nameModel <- "Sel30"
data.tmp <- parameters_more_30perc_informative_Genotype
glm_rf_classifiers_CatVarEffects.function(data.tmp,paste0(name,"_sel30perc"),90,90,"Genotype","Genotype","normal",nameModel);
Full model: all variables
nameModel <- "fullMdl"
data.tmp <- phenoSocial_4analysis
glm_rf_classifiers_CatVarEffects.function(data.tmp,paste0(name,"_fullMdl"),90,90,"Genotype","Genotype","normal",nameModel);
# Sel1 model (model without highly correlated variables)
nameModel <- "Sel1"
data.tmp <- phenoAll_4analysis_woHighCor_sel1
glm_rf_classifiers_CatVarEffects.function(data.tmp,paste0(name,"_sel1Mdl"),90,90,"Genotype","Genotype","normal",nameModel);
```
}
